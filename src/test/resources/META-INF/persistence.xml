<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
             version="2.2">
    <persistence-unit name="default">
        <description>Tenistas JPA</description>
        <!--   Indicamos el “provider” que es la implementación de JPA que estamos usando.
               En nuestro ejemplo hibernate, pero existen otros proveedores como EclipseLink:   -->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <!-- indicamos las clases a ser mapeadas por JPA -->
        <class>models.Adquisicion</class>
        <class>models.Encordado</class>
        <class>models.Encordadora</class>
        <class>models.Maquina</class>
        <class>models.Pedido</class>
        <class>models.Personalizacion</class>
        <class>models.Personalizadora</class>
        <class>models.Producto</class>
        <class>models.Tarea</class>
        <class>models.Turno</class>
        <class>models.User</class>

        <!--   Indicamos las propiedades de configuración de la implementación de JPA que estamos usando -->
        <properties>
            <property name="hibernate.connection.url" value="jdbc:h2:mem:practica02JPA;DB_CLOSE_DELAY=-1;"/>
            <property name="hibernate.connection.driver_class" value="org.h2.Driver"/>
            <property name="hibernate.connection.user" value="ivanloli"/>
            <property name="hibernate.connection.password" value=""/>
            <!--   Para ver las consultas   -->
            <property name="hibernate.show_sql" value="true"/>
            <!--   Para trabajar con el esquema
                                        validate: validate the schema, makes no changes to the database.
                                        update: update the schema si detecta cambios.
                                        create: creates the schema, destroying previous data.
                                        create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
                                        none: does nothing with the schema, makes no changes to the database  -->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
        </properties>
    </persistence-unit>
</persistence>
